plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
}

android {
    compileSdk 34
    namespace 'com.tekskills.st_tekskills'

    defaultConfig {
        applicationId "com.tekskills.st_tekskills"
        minSdk 26
        targetSdk 34
        versionCode 240719016
        versionName "1.0.0"//previous 1.0.4 updated by ravi on 11th Oct '23
        vectorDrawables {
            useSupportLibrary true
        }

        def env = System.getenv()

        print "versionCode ::: " + env['VERSION_NUMBER']
        if (env['VERSION_NUMBER'] != null) {
            //If version number available from environment
            versionCode env['VERSION_NUMBER'].toInteger()
        } else {
            // Build number not available. Build number should be entered manually.
            versionCode 240719016
        }

        print "versionName ::: " + env['VERSION_NAME']

        if (env['VERSION_NAME'] != null) {
            //If build number available from environment appending to build value in the versionName.
            versionName "1.0." + env['VERSION_NAME']
        } else {
            // Build number not available. Build number should be entered manually.
            versionName "1.0.0"
        }
    }

    signingConfigs {
        release {
            storeFile file('../Keystore_Release.jks')
            storePassword '12345678'
            keyAlias 'tekskills'
            keyPassword '12345678'
        }
        debug {
            storeFile file('../Keystore_Debug.jks')
            storePassword '12345678'
            keyAlias 'tekskills'
            keyPassword '12345678'
        }
        staging {
            storeFile file('../Keystore_Staging.jks')
            storePassword '12345678'
            keyAlias 'tekskills'
            keyPassword '12345678'
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            pseudoLocalesEnabled true
            debuggable true
            minifyEnabled false
            crunchPngs false
            shrinkResources false
            zipAlignEnabled false
//            resValue "string", "serverUrl", "http://192.168.0.254:8099/"
//            resValue "string", "serverUrl", "https://expenseuat.tekskillsinc.com/"
            resValue "string", "serverUrl", "https://reimbursement.tekskillsinc.com/"

            manifestPlaceholders = [
                    appIcon  : "@mipmap/ic_launcher",
                    roundIcon: "@mipmap/ic_launcher_round"
            ]
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        staging {
            applicationIdSuffix '.staging'
            debuggable false
            minifyEnabled false
//            resValue "string", "serverUrl", "http://192.168.0.254:8099/"
            resValue "string", "serverUrl", "https://expenseuat.tekskillsinc.com/"

//            resValue "string", "serverUrl", "https://reimbursement.tekskillsinc.com/"

            manifestPlaceholders = [
                    appIcon  : "@mipmap/ic_launcher",
                    roundIcon: "@mipmap/ic_launcher_round"
            ]
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            debuggable false
            minifyEnabled false
//            resValue "string", "serverUrl", "http://192.168.0.254:8099/"
            resValue "string", "serverUrl", "https://expenseuat.tekskillsinc.com/"

//            resValue "string", "serverUrl", "https://reimbursement.tekskillsinc.com/"

            manifestPlaceholders = [
                    appIcon  : "@mipmap/ic_launcher",
                    roundIcon: "@mipmap/ic_launcher_round"
            ]
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "ST_TEKSKILLS-${variant.name}-v.${variant.versionCode}.apk"
        }
    }

//    buildTypes {
//        release {
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//        }
//    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding true
        buildConfig true
    }

}

ext {
    versions = [
            glide: '4.11.0']
}

dependencies {
    implementation project(':Geolocator')
    implementation libs.timber
    implementation libs.rxpermissions
    implementation libs.rx2java
    implementation libs.rx2Android
    implementation libs.rx2Kotlin
    implementation libs.applicationProvider
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'com.google.android.libraries.places:places:3.4.0'
    def lottieVersion = "3.4.0"
    implementation "com.airbnb.android:lottie:$lottieVersion"
    def nav_version = "2.5.2"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    def lifecycle_version = "2.5.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    def room_version = "2.5.1"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
//    implementation 'com.github.QuadFlask:colorpicker:0.0.15'
    implementation "com.google.dagger:hilt-android:2.44.2"
    kapt "com.google.dagger:hilt-compiler:2.48"
    implementation 'com.google.android.play:review:2.0.0'
    implementation 'com.google.android.play:review-ktx:2.0.0'
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3"
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0-alpha'
    implementation 'com.squareup.retrofit2:retrofit:2.7.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.2'
    implementation "com.squareup.okhttp3:logging-interceptor:4.5.0"
    //Maps utility
    implementation 'com.google.maps.android:android-maps-utils:2.2.0'
    implementation 'com.google.maps.android:maps-utils-ktx:2.2.0'
    implementation 'com.google.android.gms:play-services-location:21.2.0'
    implementation 'com.google.android.gms:play-services-maps:18.2.0'
    implementation 'com.github.bumptech.glide:glide:' + versions.glide

    kapt 'com.github.bumptech.glide:compiler:' + versions.glide

    // Pagination
    implementation("androidx.paging:paging-runtime-ktx:3.2.1")
    implementation 'androidx.work:work-runtime-ktx:2.8.1'

//    implementation project(":android-pickers")

}